# upstream for other back-end service
# upstream ofg-core-servers {
    # server YOUR_ADDRESS_01;
    # server YOUR_ADDRESS_02;
#}

upstream ofg-shadow-servers {
    # address of shadow server 
    # as long as this is run via docker-compose nginx and shadow wrapped into network
    # shdw is the name on container, 7500 is the port service listening for HTTP requets
	server shdw:7500;
}

server {
    listen       80;
    server_name  localhost;

	root /var/www/localhost;

    location @shadow_server {
        proxy_pass http://ofg-shadow-servers;
        include nginxconfig.io/proxy.conf;
    }

    location / {
        try_files $uri @prerender;
    }

	# for all requests to static we should do server rendering for crawlers...
    location @prerender {
	    set $server_side_render 0;
        # This is not full list of web bots
        if ($http_user_agent ~* "discordbot|googlebot|twitterbot|facebookexternalhit|whatsapp|skypeuripreview") {
            set $server_side_render 1;
        }
        if ($args ~ "_escaped_fragment_") {
            set $server_side_render 1;
        }
        # ignore whether requrest for specific media file
        if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
            set $server_side_render 0;
        }
        #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
        resolver 8.8.8.8;
        # if web bot then rewrite URL and REDIRECT to shadow server
        if ($server_side_render = 1) {
            rewrite ^/(.*)$ /api/$1 break;
            proxy_pass http://ofg-shadow-servers;
        }
        # try_files is an instruction to sent back static assest / bundle
        # try_files $uri $uri/ /index.html;

        # For the showcase pupose ONLY
        # I return 400 (not found) and message to ensure request hit the right route
        return 400 "<b>Whoa! Request not from bot for to root index.html</b>";
    }
}